project('bgfx', ['c', 'cpp'], version: '1.115')

add_project_arguments('-DBX_CONFIG_DEBUG', language: 'cpp')
add_project_arguments('-DENABLE_OPT', language: 'cpp')
add_project_arguments('-DENABLE_HLSL', language: 'cpp')

cpp = meson.get_compiler('cpp')

dl = cpp.find_library('dl')
threads = dependency('threads', required: true)
x11 = dependency('X11')
glx = dependency('glx')

# bx
bx_sources = files('bx/src/amalgamated.cpp')
bx_inc = include_directories('bx/include', 'bx/3rdparty')
bx = static_library('bx', bx_sources, dependencies: dl, include_directories: bx_inc)
bx_dep = declare_dependency(include_directories: bx_inc, link_with: bx)

# bimg 3rdparty
astc = static_library('astc', 'bimg/3rdparty/astc/astc_averages_and_directions.cpp',
                    'bimg/3rdparty/astc/astc_block_sizes2.cpp',
                    'bimg/3rdparty/astc/astc_color_quantize.cpp',
                    'bimg/3rdparty/astc/astc_color_unquantize.cpp',
                    'bimg/3rdparty/astc/astc_compress_symbolic.cpp',
                    'bimg/3rdparty/astc/astc_compute_variance.cpp',
                    'bimg/3rdparty/astc/astc_decompress_symbolic.cpp',
                    'bimg/3rdparty/astc/astc_encoding_choice_error.cpp',
                    'bimg/3rdparty/astc/astc_ideal_endpoints_and_weights.cpp',
                    'bimg/3rdparty/astc/astc_imageblock.cpp',
                    'bimg/3rdparty/astc/astc_integer_sequence.cpp',
                    'bimg/3rdparty/astc/astc_kmeans_partitioning.cpp',
                    'bimg/3rdparty/astc/astc_lib.cpp',
                    'bimg/3rdparty/astc/astc_partition_tables.cpp',
                    'bimg/3rdparty/astc/astc_percentile_tables.cpp',
                     include_directories: 'bimg/3rdparty/astc')
astc_dep = declare_dependency(include_directories: 'bimg/3rdparty/astc', link_with: astc)

astc_codec = static_library('astc-codec',
                            'bimg/3rdparty/astc-codec/src/decoder/astc_file.cc',
                            'bimg/3rdparty/astc-codec/src/decoder/codec.cc',
                            'bimg/3rdparty/astc-codec/src/decoder/endpoint_codec.cc',
                            'bimg/3rdparty/astc-codec/src/decoder/footprint.cc',
                            'bimg/3rdparty/astc-codec/src/decoder/integer_sequence_codec.cc',
                            'bimg/3rdparty/astc-codec/src/decoder/intermediate_astc_block.cc',
                            'bimg/3rdparty/astc-codec/src/decoder/logical_astc_block.cc',
                            'bimg/3rdparty/astc-codec/src/decoder/partition.cc',
                            'bimg/3rdparty/astc-codec/src/decoder/physical_astc_block.cc',
                            'bimg/3rdparty/astc-codec/src/decoder/quantization.cc',
                            'bimg/3rdparty/astc-codec/src/decoder/weight_infill.cc',
                           include_directories: ['bimg/3rdparty', 'bimg/3rdparty/astc-codec', 'bimg/3rdparty/astc-codec/include'])
astc_codec_dep = declare_dependency(include_directories: ['bimg/3rdparty', 'bimg/3rdparty/astc-codec', 'bimg/3rdparty/astc-codec/include'], link_with: astc_codec)

iqa = static_library('iqa', 'bimg/3rdparty/iqa/source/convolve.c',
                    'bimg/3rdparty/iqa/source/decimate.c',
                    'bimg/3rdparty/iqa/source/math_utils.c',
                    'bimg/3rdparty/iqa/source/ms_ssim.c',
                    'bimg/3rdparty/iqa/source/mse.c',
                    'bimg/3rdparty/iqa/source/psnr.c',
                    'bimg/3rdparty/iqa/source/ssim.c',
                    include_directories: 'bimg/3rdparty/iqa/include')
iqa_dep = declare_dependency(include_directories: 'bimg/3rdparty/iqa/include', link_with: iqa)

libsquish = static_library('libsquish', 'bimg/3rdparty/libsquish/alpha.cpp')
libsquish_dep = declare_dependency(link_with: libsquish)

tinyexr = static_library('tinyexr', 'bimg/3rdparty/tinyexr/deps/miniz/miniz.c',
                        include_directories: ['bimg/3rdparty/tinyexr', 'bimg/3rdparty/tinyexr/deps/miniz'])
tinyexr_dep = declare_dependency(include_directories: ['bimg/3rdparty/tinyexr', 'bimg/3rdparty/tinyexr/deps/miniz'], link_with: tinyexr)

# bimg
bimg_sources = files('bimg/src/image_cubemap_filter.cpp',
                    'bimg/src/image_decode.cpp', 
                    'bimg/src/image_encode.cpp',
                    'bimg/src/image_gnf.cpp',
                    'bimg/src/image.cpp')
bimg_inc = include_directories('bimg/include', 'bimg/3rdparty')
bimg = static_library('bimg', bimg_sources, 
                    dependencies: [bx_dep, astc_dep, astc_codec_dep, iqa_dep, libsquish_dep, tinyexr_dep], 
                    include_directories: bimg_inc)
bimg_dep = declare_dependency(include_directories: bimg_inc, link_with: bimg)

#bgfx 3rdparty
fcpp = static_library('fcpp', 'bgfx/3rdparty/fcpp/cpp1.c',
                     'bgfx/3rdparty/fcpp/cpp2.c',
                     'bgfx/3rdparty/fcpp/cpp3.c',
                     'bgfx/3rdparty/fcpp/cpp4.c',
                     'bgfx/3rdparty/fcpp/cpp5.c',
                     'bgfx/3rdparty/fcpp/cpp6.c',
                     include_directories: 'bgfx/3rdparty/fcpp/')
fcpp_dep = declare_dependency(include_directories: 'bgfx/3rdparty/fcpp/', link_with: fcpp)

glsl_optimizer_inc = include_directories('bgfx/3rdparty/glsl-optimizer/include',
                                        'bgfx/3rdparty/glsl-optimizer/src/mesa',
                                        'bgfx/3rdparty/glsl-optimizer/src/glsl',
                                        'bgfx/3rdparty/glsl-optimizer/src')

glcpp = static_library('glcpp', 'bgfx/3rdparty/glsl-optimizer/src/glsl/glcpp/glcpp-lex.c',
                      'bgfx/3rdparty/glsl-optimizer/src/glsl/glcpp/glcpp-parse.c',
                      'bgfx/3rdparty/glsl-optimizer/src/glsl/glcpp/pp.c',
                      'bgfx/3rdparty/glsl-optimizer/src/util/hash_table.c',
                      'bgfx/3rdparty/glsl-optimizer/src/util/ralloc.c',
                      include_directories: glsl_optimizer_inc)
mesa = static_library('mesa', 'bgfx/3rdparty/glsl-optimizer/src/mesa/program/prog_hash_table.c',
                     'bgfx/3rdparty/glsl-optimizer/src/mesa/program/symbol_table.c',
                     'bgfx/3rdparty/glsl-optimizer/src/mesa/main/imports.c',
                     include_directories: glsl_optimizer_inc)

glsl_optimizer = static_library('glsl-optimizer', 'bgfx/3rdparty/glsl-optimizer/src/glsl/ast_array_index.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/ast_expr.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/ast_function.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/ast_to_hir.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/ast_type.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/builtin_functions.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/builtin_types.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/builtin_variables.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/glsl_lexer.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/glsl_optimizer.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/glsl_parser.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/glsl_parser_extras.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/glsl_symbol_table.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/glsl_types.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/hir_field_selection.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/ir_basic_block.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/ir_builder.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/ir_clone.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/ir_constant_expression.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/ir.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/ir_equals.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/ir_expression_flattening.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/ir_function_can_inline.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/ir_function.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/ir_function_detect_recursion.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/ir_hierarchical_visitor.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/ir_hv_accept.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/ir_import_prototypes.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/ir_print_glsl_visitor.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/ir_print_metal_visitor.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/ir_print_visitor.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/ir_rvalue_visitor.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/ir_stats.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/ir_unused_structs.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/ir_validate.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/ir_variable_refcount.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/link_atomics.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/linker.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/link_functions.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/link_interface_blocks.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/link_uniform_block_active_visitor.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/link_uniform_blocks.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/link_uniform_initializers.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/link_uniforms.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/link_varyings.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/loop_analysis.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/loop_controls.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/loop_unroll.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/lower_clip_distance.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/lower_discard.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/lower_discard_flow.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/lower_if_to_cond_assign.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/lower_instructions.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/lower_jumps.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/lower_mat_op_to_vec.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/lower_named_interface_blocks.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/lower_noise.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/lower_offset_array.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/lower_output_reads.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/lower_packed_varyings.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/lower_packing_builtins.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/lower_ubo_reference.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/lower_variable_index_to_cond_assign.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/lower_vec_index_to_cond_assign.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/lower_vec_index_to_swizzle.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/lower_vector.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/lower_vector_insert.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/lower_vertex_id.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/opt_algebraic.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/opt_array_splitting.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/opt_constant_folding.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/opt_constant_propagation.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/opt_constant_variable.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/opt_copy_propagation.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/opt_copy_propagation_elements.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/opt_cse.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/opt_dead_builtin_variables.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/opt_dead_builtin_varyings.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/opt_dead_code.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/opt_dead_code_local.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/opt_dead_functions.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/opt_flatten_nested_if_blocks.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/opt_flip_matrices.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/opt_function_inlining.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/opt_if_simplification.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/opt_minmax.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/opt_noop_swizzle.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/opt_rebalance_tree.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/opt_redundant_jumps.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/opt_structure_splitting.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/opt_swizzle_swizzle.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/opt_tree_grafting.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/opt_vectorize.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/s_expression.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/standalone_scaffolding.cpp',
                                'bgfx/3rdparty/glsl-optimizer/src/glsl/strtod.c',
                               include_directories: glsl_optimizer_inc,
                               link_with: [glcpp, mesa])
glsl_optimizer_dep = declare_dependency(include_directories: glsl_optimizer_inc, link_with: glsl_optimizer)

glslang = static_library('glslang', 'bgfx/3rdparty/glslang/glslang/GenericCodeGen/CodeGen.cpp',
                        'bgfx/3rdparty/glslang/glslang/GenericCodeGen/Link.cpp',
                        'bgfx/3rdparty/glslang/glslang/MachineIndependent/Constant.cpp',
                        'bgfx/3rdparty/glslang/glslang/MachineIndependent/InfoSink.cpp',
                        'bgfx/3rdparty/glslang/glslang/MachineIndependent/Initialize.cpp',
                        'bgfx/3rdparty/glslang/glslang/MachineIndependent/IntermTraverse.cpp',
                        'bgfx/3rdparty/glslang/glslang/MachineIndependent/Intermediate.cpp',
                        'bgfx/3rdparty/glslang/glslang/MachineIndependent/ParseContextBase.cpp',
                        'bgfx/3rdparty/glslang/glslang/MachineIndependent/ParseHelper.cpp',
                        'bgfx/3rdparty/glslang/glslang/MachineIndependent/PoolAlloc.cpp',
                        'bgfx/3rdparty/glslang/glslang/MachineIndependent/RemoveTree.cpp',
                        'bgfx/3rdparty/glslang/glslang/MachineIndependent/Scan.cpp',
                        'bgfx/3rdparty/glslang/glslang/MachineIndependent/ShaderLang.cpp',
                        'bgfx/3rdparty/glslang/glslang/MachineIndependent/SpirvIntrinsics.cpp',
                        'bgfx/3rdparty/glslang/glslang/MachineIndependent/SymbolTable.cpp',
                        'bgfx/3rdparty/glslang/glslang/MachineIndependent/Versions.cpp',
                        'bgfx/3rdparty/glslang/glslang/MachineIndependent/attribute.cpp',
                        'bgfx/3rdparty/glslang/glslang/MachineIndependent/glslang_tab.cpp',
                        'bgfx/3rdparty/glslang/glslang/MachineIndependent/intermOut.cpp',
                        'bgfx/3rdparty/glslang/glslang/MachineIndependent/iomapper.cpp',
                        'bgfx/3rdparty/glslang/glslang/MachineIndependent/limits.cpp',
                        'bgfx/3rdparty/glslang/glslang/MachineIndependent/linkValidate.cpp',
                        'bgfx/3rdparty/glslang/glslang/MachineIndependent/parseConst.cpp',
                        'bgfx/3rdparty/glslang/glslang/MachineIndependent/propagateNoContraction.cpp',
                        'bgfx/3rdparty/glslang/glslang/MachineIndependent/reflection.cpp',
                        'bgfx/3rdparty/glslang/glslang/MachineIndependent/preprocessor/Pp.cpp',
                        'bgfx/3rdparty/glslang/glslang/MachineIndependent/preprocessor/PpAtom.cpp',
                        'bgfx/3rdparty/glslang/glslang/MachineIndependent/preprocessor/PpContext.cpp',
                        'bgfx/3rdparty/glslang/glslang/MachineIndependent/preprocessor/PpScanner.cpp',
                        'bgfx/3rdparty/glslang/glslang/MachineIndependent/preprocessor/PpTokens.cpp',
                        'bgfx/3rdparty/glslang/glslang/HLSL/hlslAttributes.cpp',
                        'bgfx/3rdparty/glslang/glslang/HLSL/hlslGrammar.cpp',
                        'bgfx/3rdparty/glslang/glslang/HLSL/hlslOpMap.cpp',
                        'bgfx/3rdparty/glslang/glslang/HLSL/hlslParseables.cpp',
                        'bgfx/3rdparty/glslang/glslang/HLSL/hlslParseHelper.cpp',
                        'bgfx/3rdparty/glslang/glslang/HLSL/hlslScanContext.cpp',
                        'bgfx/3rdparty/glslang/glslang/HLSL/hlslTokenStream.cpp',
                        'bgfx/3rdparty/glslang/hlsl/stub.cpp',
                        'bgfx/3rdparty/glslang/SPIRV/CInterface/spirv_c_interface.cpp',
                        'bgfx/3rdparty/glslang/SPIRV/disassemble.cpp',
                        'bgfx/3rdparty/glslang/SPIRV/doc.cpp',
                        'bgfx/3rdparty/glslang/SPIRV/GlslangToSpv.cpp',
                        'bgfx/3rdparty/glslang/SPIRV/InReadableOrder.cpp',
                        'bgfx/3rdparty/glslang/SPIRV/Logger.cpp',
                        'bgfx/3rdparty/glslang/SPIRV/SpvBuilder.cpp',
                        'bgfx/3rdparty/glslang/SPIRV/SpvPostProcess.cpp',
                        'bgfx/3rdparty/glslang/SPIRV/SPVRemapper.cpp',
                        'bgfx/3rdparty/glslang/SPIRV/SpvTools.cpp',
                        'bgfx/3rdparty/glslang/OGLCompilersDLL/InitializeDll.cpp',
                        'bgfx/3rdparty/glslang/glslang/OSDependent/Unix/ossource.cpp',
                        include_directories: ['bgfx/3rdparty', 'bgfx/3rdparty/spirv-tools/include', 'bgfx/3rdparty/spirv-tools/source', 'bgfx/3rdparty/glslang', 'bgfx/3rdparty/glslang/glslang/Include', 'bgfx/3rdparty/glslang/glslang/Public'])
glslang_dep = declare_dependency(include_directories: ['bgfx/3rdparty/spirv-tools/include', 'bgfx/3rdparty/spirv-tools/source', 'bgfx/3rdparty/glslang', 'bgfx/3rdparty/glslang/glslang/Include', 'bgfx/3rdparty/glslang/glslang/Public'], link_with: glslang)

meshoptimizer = static_library('meshoptimizer', 'bgfx/3rdparty/meshoptimizer/src/allocator.cpp',    
                              'bgfx/3rdparty/meshoptimizer/src/clusterizer.cpp',  
                              'bgfx/3rdparty/meshoptimizer/src/indexcodec.cpp',   
                              'bgfx/3rdparty/meshoptimizer/src/indexgenerator.cpp',   
                              'bgfx/3rdparty/meshoptimizer/src/overdrawanalyzer.cpp', 
                              'bgfx/3rdparty/meshoptimizer/src/overdrawoptimizer.cpp',    
                              'bgfx/3rdparty/meshoptimizer/src/simplifier.cpp',   
                              'bgfx/3rdparty/meshoptimizer/src/spatialorder.cpp', 
                              'bgfx/3rdparty/meshoptimizer/src/stripifier.cpp',   
                              'bgfx/3rdparty/meshoptimizer/src/vcacheanalyzer.cpp',   
                              'bgfx/3rdparty/meshoptimizer/src/vcacheoptimizer.cpp',  
                              'bgfx/3rdparty/meshoptimizer/src/vertexcodec.cpp',  
                              'bgfx/3rdparty/meshoptimizer/src/vertexfilter.cpp', 
                              'bgfx/3rdparty/meshoptimizer/src/vfetchanalyzer.cpp',   
                              'bgfx/3rdparty/meshoptimizer/src/vfetchoptimizer.cpp',  
                              include_directories: 'bgfx/3rdparty')
meshoptimizer_dep = declare_dependency(link_with: meshoptimizer)

spirv_cross = static_library('spirv-cross', 'bgfx/3rdparty/spirv-cross/main.cpp',
                        'bgfx/3rdparty/spirv-cross/spirv_cfg.cpp',
                        'bgfx/3rdparty/spirv-cross/spirv_cpp.cpp',
                        'bgfx/3rdparty/spirv-cross/spirv_cross.cpp',
                        'bgfx/3rdparty/spirv-cross/spirv_cross_c.cpp',
                        'bgfx/3rdparty/spirv-cross/spirv_cross_parsed_ir.cpp',
                        'bgfx/3rdparty/spirv-cross/spirv_cross_util.cpp',
                        'bgfx/3rdparty/spirv-cross/spirv_glsl.cpp',
                        'bgfx/3rdparty/spirv-cross/spirv_hlsl.cpp',
                        'bgfx/3rdparty/spirv-cross/spirv_msl.cpp',
                        'bgfx/3rdparty/spirv-cross/spirv_parser.cpp',
                        'bgfx/3rdparty/spirv-cross/spirv_reflect.cpp',
                        include_directories: ['bgfx/3rdparty/spirv-cross', 'bgfx/3rdparty/spirv-cross/include'])
spirv_cross_dep = declare_dependency(include_directories: ['bgfx/3rdparty/spirv-cross', 'bgfx/3rdparty/spirv-cross/include'], link_with: spirv_cross)

spirv_tools = static_library('spirv-tools', 'bgfx/3rdparty/spirv-tools/source/assembly_grammar.cpp',
                            'bgfx/3rdparty/spirv-tools/source/binary.cpp',
                            'bgfx/3rdparty/spirv-tools/source/diagnostic.cpp',
                            'bgfx/3rdparty/spirv-tools/source/diff/diff.cpp',
                            'bgfx/3rdparty/spirv-tools/source/disassemble.cpp',
                            'bgfx/3rdparty/spirv-tools/source/enum_string_mapping.cpp',
                            'bgfx/3rdparty/spirv-tools/source/ext_inst.cpp',
                            'bgfx/3rdparty/spirv-tools/source/extensions.cpp',
                            'bgfx/3rdparty/spirv-tools/source/libspirv.cpp',
                            'bgfx/3rdparty/spirv-tools/source/link/linker.cpp',
                            'bgfx/3rdparty/spirv-tools/source/lint/divergence_analysis.cpp',
                            'bgfx/3rdparty/spirv-tools/source/lint/lint_divergent_derivatives.cpp',
                            'bgfx/3rdparty/spirv-tools/source/lint/linter.cpp',
                            'bgfx/3rdparty/spirv-tools/source/name_mapper.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opcode.cpp',
                            'bgfx/3rdparty/spirv-tools/source/operand.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/aggressive_dead_code_elim_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/amd_ext_to_khr.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/basic_block.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/block_merge_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/block_merge_util.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/build_module.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/ccp_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/cfg.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/cfg_cleanup_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/code_sink.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/combine_access_chains.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/compact_ids_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/composite.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/const_folding_rules.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/constants.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/control_dependence.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/convert_to_half_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/convert_to_sampled_image_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/copy_prop_arrays.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/dataflow.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/dead_branch_elim_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/dead_insert_elim_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/dead_variable_elimination.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/debug_info_manager.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/decoration_manager.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/def_use_manager.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/desc_sroa.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/desc_sroa_util.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/dominator_analysis.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/dominator_tree.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/eliminate_dead_constant_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/eliminate_dead_functions_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/eliminate_dead_functions_util.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/eliminate_dead_members_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/feature_manager.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/fix_storage_class.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/flatten_decoration_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/fold.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/fold_spec_constant_op_and_composite_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/folding_rules.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/freeze_spec_constant_value_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/function.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/graphics_robust_access_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/if_conversion.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/inline_exhaustive_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/inline_opaque_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/inline_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/inst_bindless_check_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/inst_buff_addr_check_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/inst_debug_printf_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/instruction.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/instruction_list.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/instrument_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/interp_fixup_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/ir_context.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/ir_loader.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/licm_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/local_access_chain_convert_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/local_redundancy_elimination.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/local_single_block_elim_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/local_single_store_elim_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/loop_dependence.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/loop_dependence_helpers.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/loop_descriptor.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/loop_fission.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/loop_fusion.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/loop_fusion_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/loop_peeling.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/loop_unroller.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/loop_unswitch_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/loop_utils.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/mem_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/merge_return_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/module.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/optimizer.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/pass_manager.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/pch_source_opt.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/private_to_local_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/propagator.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/reduce_load_size.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/redundancy_elimination.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/register_pressure.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/relax_float_ops_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/remove_dontinline_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/remove_duplicates_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/remove_unused_interface_variables_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/replace_desc_array_access_using_var_index.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/replace_invalid_opc.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/scalar_analysis.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/scalar_analysis_simplification.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/scalar_replacement_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/set_spec_constant_default_value_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/simplification_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/spread_volatile_semantics.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/ssa_rewrite_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/strength_reduction_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/strip_debug_info_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/strip_nonsemantic_info_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/struct_cfg_analysis.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/type_manager.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/types.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/unify_const_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/upgrade_memory_model.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/value_number_table.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/vector_dce.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/workaround1209.cpp',
                            'bgfx/3rdparty/spirv-tools/source/opt/wrap_opkill.cpp',
                            'bgfx/3rdparty/spirv-tools/source/parsed_operand.cpp',
                            'bgfx/3rdparty/spirv-tools/source/pch_source.cpp',
                            'bgfx/3rdparty/spirv-tools/source/print.cpp',
                            'bgfx/3rdparty/spirv-tools/source/reduce/change_operand_reduction_opportunity.cpp',
                            'bgfx/3rdparty/spirv-tools/source/reduce/change_operand_to_undef_reduction_opportunity.cpp',
                            'bgfx/3rdparty/spirv-tools/source/reduce/conditional_branch_to_simple_conditional_branch_opportunity_finder.cpp',
                            'bgfx/3rdparty/spirv-tools/source/reduce/conditional_branch_to_simple_conditional_branch_reduction_opportunity.cpp',
                            'bgfx/3rdparty/spirv-tools/source/reduce/merge_blocks_reduction_opportunity.cpp',
                            'bgfx/3rdparty/spirv-tools/source/reduce/merge_blocks_reduction_opportunity_finder.cpp',
                            'bgfx/3rdparty/spirv-tools/source/reduce/operand_to_const_reduction_opportunity_finder.cpp',
                            'bgfx/3rdparty/spirv-tools/source/reduce/operand_to_dominating_id_reduction_opportunity_finder.cpp',
                            'bgfx/3rdparty/spirv-tools/source/reduce/operand_to_undef_reduction_opportunity_finder.cpp',
                            'bgfx/3rdparty/spirv-tools/source/reduce/pch_source_reduce.cpp',
                            'bgfx/3rdparty/spirv-tools/source/reduce/reducer.cpp',
                            'bgfx/3rdparty/spirv-tools/source/reduce/reduction_opportunity.cpp',
                            'bgfx/3rdparty/spirv-tools/source/reduce/reduction_opportunity_finder.cpp',
                            'bgfx/3rdparty/spirv-tools/source/reduce/reduction_pass.cpp',
                            'bgfx/3rdparty/spirv-tools/source/reduce/reduction_util.cpp',
                            'bgfx/3rdparty/spirv-tools/source/reduce/remove_block_reduction_opportunity.cpp',
                            'bgfx/3rdparty/spirv-tools/source/reduce/remove_block_reduction_opportunity_finder.cpp',
                            'bgfx/3rdparty/spirv-tools/source/reduce/remove_function_reduction_opportunity.cpp',
                            'bgfx/3rdparty/spirv-tools/source/reduce/remove_function_reduction_opportunity_finder.cpp',
                            'bgfx/3rdparty/spirv-tools/source/reduce/remove_instruction_reduction_opportunity.cpp',
                            'bgfx/3rdparty/spirv-tools/source/reduce/remove_selection_reduction_opportunity.cpp',
                            'bgfx/3rdparty/spirv-tools/source/reduce/remove_selection_reduction_opportunity_finder.cpp',
                            'bgfx/3rdparty/spirv-tools/source/reduce/remove_struct_member_reduction_opportunity.cpp',
                            'bgfx/3rdparty/spirv-tools/source/reduce/remove_unused_instruction_reduction_opportunity_finder.cpp',
                            'bgfx/3rdparty/spirv-tools/source/reduce/remove_unused_struct_member_reduction_opportunity_finder.cpp',
                            'bgfx/3rdparty/spirv-tools/source/reduce/simple_conditional_branch_to_branch_opportunity_finder.cpp',
                            'bgfx/3rdparty/spirv-tools/source/reduce/simple_conditional_branch_to_branch_reduction_opportunity.cpp',
                            'bgfx/3rdparty/spirv-tools/source/reduce/structured_construct_to_block_reduction_opportunity.cpp',
                            'bgfx/3rdparty/spirv-tools/source/reduce/structured_construct_to_block_reduction_opportunity_finder.cpp',
                            'bgfx/3rdparty/spirv-tools/source/reduce/structured_loop_to_selection_reduction_opportunity.cpp',
                            'bgfx/3rdparty/spirv-tools/source/reduce/structured_loop_to_selection_reduction_opportunity_finder.cpp',
                            'bgfx/3rdparty/spirv-tools/source/software_version.cpp',
                            'bgfx/3rdparty/spirv-tools/source/spirv_endian.cpp',
                            'bgfx/3rdparty/spirv-tools/source/spirv_fuzzer_options.cpp',
                            'bgfx/3rdparty/spirv-tools/source/spirv_optimizer_options.cpp',
                            'bgfx/3rdparty/spirv-tools/source/spirv_reducer_options.cpp',
                            'bgfx/3rdparty/spirv-tools/source/spirv_target_env.cpp',
                            'bgfx/3rdparty/spirv-tools/source/spirv_validator_options.cpp',
                            'bgfx/3rdparty/spirv-tools/source/table.cpp',
                            'bgfx/3rdparty/spirv-tools/source/text.cpp',
                            'bgfx/3rdparty/spirv-tools/source/text_handler.cpp',
                            'bgfx/3rdparty/spirv-tools/source/util/bit_vector.cpp',
                            'bgfx/3rdparty/spirv-tools/source/util/parse_number.cpp',
                            'bgfx/3rdparty/spirv-tools/source/util/string_utils.cpp',
                            'bgfx/3rdparty/spirv-tools/source/util/timer.cpp',
                            'bgfx/3rdparty/spirv-tools/source/val/basic_block.cpp',
                            'bgfx/3rdparty/spirv-tools/source/val/construct.cpp',
                            'bgfx/3rdparty/spirv-tools/source/val/function.cpp',
                            'bgfx/3rdparty/spirv-tools/source/val/instruction.cpp',
                            'bgfx/3rdparty/spirv-tools/source/val/validate.cpp',
                            'bgfx/3rdparty/spirv-tools/source/val/validate_adjacency.cpp',
                            'bgfx/3rdparty/spirv-tools/source/val/validate_annotation.cpp',
                            'bgfx/3rdparty/spirv-tools/source/val/validate_arithmetics.cpp',
                            'bgfx/3rdparty/spirv-tools/source/val/validate_atomics.cpp',
                            'bgfx/3rdparty/spirv-tools/source/val/validate_barriers.cpp',
                            'bgfx/3rdparty/spirv-tools/source/val/validate_bitwise.cpp',
                            'bgfx/3rdparty/spirv-tools/source/val/validate_builtins.cpp',
                            'bgfx/3rdparty/spirv-tools/source/val/validate_capability.cpp',
                            'bgfx/3rdparty/spirv-tools/source/val/validate_cfg.cpp',
                            'bgfx/3rdparty/spirv-tools/source/val/validate_composites.cpp',
                            'bgfx/3rdparty/spirv-tools/source/val/validate_constants.cpp',
                            'bgfx/3rdparty/spirv-tools/source/val/validate_conversion.cpp',
                            'bgfx/3rdparty/spirv-tools/source/val/validate_debug.cpp',
                            'bgfx/3rdparty/spirv-tools/source/val/validate_decorations.cpp',
                            'bgfx/3rdparty/spirv-tools/source/val/validate_derivatives.cpp',
                            'bgfx/3rdparty/spirv-tools/source/val/validate_execution_limitations.cpp',
                            'bgfx/3rdparty/spirv-tools/source/val/validate_extensions.cpp',
                            'bgfx/3rdparty/spirv-tools/source/val/validate_function.cpp',
                            'bgfx/3rdparty/spirv-tools/source/val/validate_id.cpp',
                            'bgfx/3rdparty/spirv-tools/source/val/validate_image.cpp',
                            'bgfx/3rdparty/spirv-tools/source/val/validate_instruction.cpp',
                            'bgfx/3rdparty/spirv-tools/source/val/validate_interfaces.cpp',
                            'bgfx/3rdparty/spirv-tools/source/val/validate_layout.cpp',
                            'bgfx/3rdparty/spirv-tools/source/val/validate_literals.cpp',
                            'bgfx/3rdparty/spirv-tools/source/val/validate_logicals.cpp',
                            'bgfx/3rdparty/spirv-tools/source/val/validate_memory.cpp',
                            'bgfx/3rdparty/spirv-tools/source/val/validate_memory_semantics.cpp',
                            'bgfx/3rdparty/spirv-tools/source/val/validate_misc.cpp',
                            'bgfx/3rdparty/spirv-tools/source/val/validate_mode_setting.cpp',
                            'bgfx/3rdparty/spirv-tools/source/val/validate_non_uniform.cpp',
                            'bgfx/3rdparty/spirv-tools/source/val/validate_primitives.cpp',
                            'bgfx/3rdparty/spirv-tools/source/val/validate_scopes.cpp',
                            'bgfx/3rdparty/spirv-tools/source/val/validate_small_type_uses.cpp',
                            'bgfx/3rdparty/spirv-tools/source/val/validate_type.cpp',
                            'bgfx/3rdparty/spirv-tools/source/val/validation_state.cpp',
                            include_directories: ['bgfx/3rdparty/spirv-headers/include', 'bgfx/3rdparty/spirv-tools', 'bgfx/3rdparty/spirv-tools/include', 'bgfx/3rdparty/spirv-tools/include/generated', 'bgfx/3rdparty/spirv-tools/source'],
                            cpp_args: '-Wno-switch')
spirv_tools_dep = declare_dependency(include_directories: ['bgfx/3rdparty/spirv-headers/include', 'bgfx/3rdparty/spirv-tools', 'bgfx/3rdparty/spirv-tools/include', 'bgfx/3rdparty/spirv-tools/include/generated', 'bgfx/3rdparty/spirv-tools/source'],
                                    link_with: spirv_tools)

webgpu_dep = declare_dependency(include_directories: 'bgfx/3rdparty/webgpu/include')

# bgfx
bgfx_sources = files('bgfx/src/amalgamated.cpp')
bgfx_inc = include_directories('bgfx/include', 'bgfx/3rdparty', 'bgfx/3rdparty/dxsdk', 'bgfx/3rdparty/khronos')

bgfx = library('bgfx', bgfx_sources, include_directories: bgfx_inc, dependencies: [threads, x11, glx, bx_dep, bimg_dep])
bgfx_dep = declare_dependency(include_directories: bgfx_inc, link_with: bgfx)

# bgfx tools
geometryc = executable('geometryc', 'bgfx/tools/geometryc/geometryc.cpp',
                      dependencies: [bx_dep, bgfx_dep, meshoptimizer_dep])

# geometryv = executable('geometryv', 'bgfx/tools/geometryv/geometryv.cpp')

shaderc = executable('shaderc', 'bgfx/tools/shaderc/shaderc_glsl.cpp',
                    'bgfx/tools/shaderc/shaderc_hlsl.cpp',
                    'bgfx/tools/shaderc/shaderc_metal.cpp',
                    'bgfx/tools/shaderc/shaderc_pssl.cpp',
                    'bgfx/tools/shaderc/shaderc_spirv.cpp',
                    'bgfx/tools/shaderc/shaderc.cpp',
                    dependencies: [threads, bx_dep, bgfx_dep, fcpp_dep, glsl_optimizer_dep, glslang_dep, spirv_cross_dep, spirv_tools_dep, webgpu_dep],
                    cpp_args: ['-D_CRT_SECURE_NO_WARNINGS'])

# texturev = executable('texturev', 'bgfx/tools/texturev/texturev.cpp')

# examples common
examples_common = static_library('examples-common', 'bgfx/examples/common/bgfx_utils.cpp',
                                'bgfx/examples/common/camera.cpp',
                                'bgfx/examples/common/cube_atlas.cpp',
                                'bgfx/examples/common/debugdraw/debugdraw.cpp',
                                'bgfx/examples/common/entry/cmd.cpp',
                                'bgfx/examples/common/entry/dialog.cpp',
                                'bgfx/examples/common/entry/entry.cpp',
                                'bgfx/examples/common/entry/entry_android.cpp',
                                'bgfx/examples/common/entry/entry_glfw.cpp',
                                'bgfx/examples/common/entry/entry_html5.cpp',
                                'bgfx/examples/common/entry/entry_noop.cpp',
                                'bgfx/examples/common/entry/entry_sdl.cpp',
                                'bgfx/examples/common/entry/entry_windows.cpp',
                                'bgfx/examples/common/entry/entry_x11.cpp',
                                'bgfx/examples/common/entry/input.cpp',
                                'bgfx/examples/common/example-glue.cpp',
                                'bgfx/examples/common/font/font_manager.cpp',
                                'bgfx/examples/common/font/text_buffer_manager.cpp',
                                'bgfx/examples/common/font/text_metrics.cpp',
                                'bgfx/examples/common/font/utf8.cpp',
                                'bgfx/examples/common/imgui/imgui.cpp',
                                'bgfx/examples/common/nanovg/nanovg.cpp',
                                'bgfx/examples/common/nanovg/nanovg_bgfx.cpp',
                                'bgfx/examples/common/ps/particle_system.cpp',
                                dependencies: [bgfx_dep, bx_dep, bimg_dep, meshoptimizer_dep])
